<?xml version="1.0" encoding="UTF-8"?>
<chapter id="ajax" xmlns="http://docbook.org/ns/docbook">
	<title>Ajax</title>
	<para>
		The Ajax plugin allows you to call your actions using a javascript's XmlHttpRequest and sending back
		json or the view without the layout.
	</para>
	<para>
		For the plugin to be activated, the request must have the <quote>X-Requested-With</quote> HTTP header.
		Nearly all javascript frameworks add this header.
	</para>
	<para>
		When this header is detected, the layout will be automatically disabled. This can be avoided by setting
		the <quote>disable_layout</quote> configuration key to false.
	</para>
	<para>
		The default behaviour when activated is to return the action variables as a json encoded array. So the view
		won't be rendered. It is possible to disable this behaviour and render the view (the layout is still disable)
		by adding action names in the <quote>restricted</quote> configuratio key.
	</para>
	<example>
		<title>Render views instead of returning variables</title>
		<programlisting>
			<![CDATA[
Atomik::set('plugins/Ajax', array(
	'restricted' => array(
		'my-partial'
	);
));]]>
		</programlisting>
	</example>
	<para>
		The opposite behaviour can also be acheived when setting false to the <quote>allow_all</quote> configuration key.
		In this case, all views will be rendered and the variables will never be returned. It is then possible to enable
		variables output on some actions only using the <quote>allowed</quote> configuration key.
	</para>
	<para>
		You can cehck if the current request is using AJAX by calling <methodname>AjaxPlugin::isEnabled()</methodname>.
	</para>
</chapter>