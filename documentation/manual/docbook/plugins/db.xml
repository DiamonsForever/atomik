<?xml version="1.0" encoding="UTF-8"?>
<chapter id="db" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
	<title>Db</title>
	<para>
		The Db plugin provide an integration of the Db component from Atomik Lib. You can find the
		full documentation in the Atomik Lib manual.
	</para>
	<sect1 id="db-connection">
		<title>Connecting to a database</title>
		<para>
			The plugin can automatically create a default instance (which will be named default). To
			do so, you must at least define the <quote>dsn</quote> config key (in the plugin configuration).
		</para>
		<para>
			The username and password key can also be used.
		</para>
		<example>
			<title>Automatically connecting to a database</title>
			<programlisting>
				<![CDATA[
Atomik::set('plugins/Db', array(
	'dsn' => 'mysql:host=localhost;dbname=mydb',
	'username' => 'root',
	'password' => ''
));]]>
			</programlisting>
		</example>
		<para>
			The <quote>table_prefix</quote> key can be used to define a default table prefix.
		</para>
	</sect1>
	<sect1 id="db-selector">
		<title>The selector</title>
		<para>
			You can use the <quote>db</quote> selector to quickly query the database. It can either
			a table name or a full sql query. The second argument can be an array of where
			conditions if a table name is used or an array of parameters in the second case.
		</para>
		<example>
			<title>Using the db selector</title>
			<programlisting>
				<![CDATA[
$users = A('db:users');
$activeUsers = A('db:users', array('active' => 1));]]>
			</programlisting>
			<programlisting>
				<![CDATA[
$users = A('db:select * from users');
$activeUsers = A('db:select * from users where active = ?', array(1));]]>
			</programlisting>
		</example>
	</sect1>
	<sect1 id="db-console">
		<title>Using the console and sql scripts</title>
		<note>
			The Console plugin if needed for this section.
		</note>
		<para>
			The Db plugin offers facilities to manage sql scripts. If you save your scripts in the
			<filename>app/sql</filename> folder, they can be executed with a single command.
		</para>
		<para>
			This command is <quote>db-create</quote>. You can also use <quote>db-create-sql</quote> to preview
			the sql that will be executed.
		</para>
		<example>
			<title>Using the command line with the Dbb plugin</title>
			<programlisting>
				<![CDATA[
php index.php db-create-sql
php index.php db-create]]>
			</programlisting>
		</example>
		<para>
			Plugins can also provide their own scripts in their own sql folder.
		</para>
		<para>
			If you want to only execute the sql from certain plugins, you can specify which one, separated by a space,
			in the sql-create command. To only execute scripts from your application, use App as filter.
		</para>
		<example>
			<title>Filtering scripts to execute</title>
			<programlisting>
				<![CDATA[
php index.php db-create App Blog]]>
			</programlisting>
		</example>
	</sect1>
</chapter>