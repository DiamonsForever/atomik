<?xml version="1.0" encoding="UTF-8"?>
<chapter id="includes" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
	<title>Includes</title>
	<para>
		Includes are php files containing common logic that you include in your actions.
	</para>
	<para>
		Includes are stored in the <filename>app/includes</filename> and/or the <filename>app/libraries</filename> 
		directories. This can be changed in <quote>atomik/dirs/includes</quote>.
	</para>
	<para>
		To include a file from one of these directories use the <methodname>Atomik::needed()</methodname> 
		method. It takes as first argument the path to the filename you wish to include relative to the
		previous directories and without the extension.
	</para>
	<example>
		<title>Using includes</title>
		<para>
			Let's say we've created the file <filename>app/includes/common.php</filename>
		</para>
		<programlisting>
			<![CDATA[
Atomik::needed('common');]]>
		</programlisting>
		<para>
			You can use sub directories. To include a file stored at
			<filename>app/includes/libs/db.php</filename>:
		</para>
		<programlisting>
			<![CDATA[
Atomik::needed('libs/db');]]>
		</programlisting>
	</example>
	<para>
		<methodname>Atomik::needed()</methodname> also allows you to include classes using
		their name. To do so, classes have to follow the PEAR naming convention
		(<link xlink:href="http://pear.php.net/manual/en/standards.naming.php">http://pear.php.net/manual/en/standards.naming.php</link>).
	</para>
	<example>
		<title>Including classes with their name</title>
		<para>
			Let's include the class Atomik_Db located in <filename>app/libraries/Atomik/Db.php</filename>
		</para>
		<programlisting>
			<![CDATA[
Atomik::needed('Atomik_Db');]]>
		</programlisting>
	</example>
	<note>
		<para>
			<methodname>Atomik::needed()</methodname> is automatically registered as an spl_autoload handler.
			This can be modified by setting <quote>false</quote> to the configuration key named <quote>atomik/class_autoload</quote>.
		</para>
	</note>
</chapter>
