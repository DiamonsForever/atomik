<?xml version="1.0" encoding="UTF-8"?>
<chapter id="selectors" xmlns="http://docbook.org/ns/docbook">
	<title>Selectors</title>
	<para>
		Selectors are a unique feature of Atomik! They are inspired from
		Javascript frameworks which uses CSS selectors to select object
		in the DOM.
	</para>
	<para>
		Atomik Selectors allow you to select any kind of data or object.
	</para>
	<para>
		You've already encountered selectors when you discovered accessors.
		Selectors are available through the <methodname>Atomik::get()</methodname> method.
	</para>
	<para>
		Atomik also defines the <function>A()</function> function for quicker access. This
		function is only a shortcut to <methodname>Atomik::get()</methodname>.
	</para>
	<para>
		Namespaces are used to differentiate selectors. A namespace is only a word followed
		by <quote>:</quote> at the beggining of the selector.
	</para>
	<para>
		The only built-in selector (and the only one which doesn't need any namespace) gives the 
		availability to query through arrays. It has alreay been covered in the Accessors and 
		configuration section.
	</para>
	<example>
		<title>Using the built-in selector</title>
		<programlisting>
			<![CDATA[
// setting value in the global store
Atomik::set(array(
	'key1' => array(
		'key2' => 'value'
	)
));

// selecting a value from the global store
$value = A('key1/key2');]]>
		</programlisting>
	</example>
	<para>
		Plugins can provide their own selector namespace. For example, the Db plugin brings with
		it the <quote>db</quote> namespace which allow you to do sql queries.
	</para>
	<example>
		<title>Using selectors with the Db plugin</title>
		<programlisting>
			<![CDATA[
// selecting a value from the global store
$value = A('key1/key2/key3');

// selecting all posts
$allPosts = A('db:SELECT * FROM posts');

// selecting the first post
$firstPost = A('db:SELECT * FROM posts WHERE id = ?', array(1));]]>
		</programlisting>
	</example>
	<para>
		See the Db plugin documentation for more information. 
	</para>
</chapter>
