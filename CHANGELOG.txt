== CHANGELOG ==

* = New feature
! = Modification to existing feature
# = Fixed bug

----------- Atomik 2.2 --------------

[Atomik]

 WARNING: MASSIVE COMPATIBILITY BREAK IN CONFIGURATION

 ! Reorganization of configuration keys
 # echo in action was outside of layout
 * Added Atomik::setView()
 * Actions specific to http methods
 ! The http method for an action can be specified as a suffix in the first parameter of Atomik::execute()
 * Added support for file extensions in URIs
 * Added support for view contexts
 ! The second parameter of Atomik::execute() can now be a string specifying the view context
 * Added support for adding method to Atomik
 * Added Atomik::registerMethod()
 * Added Atomik::call()
 * Added Atomik::__callStatic()
 * Added Atomik::registerPluggableApplication()
 * Added Atomik::dispatchPluggableApplication()
 * Added Atomik::uriMatch()
 ! Divided Atomik::dispatch() into Atomik::run() and Atomik::dispatch()
 ! The starting point is now Atomik::run()
 * Added Atomik::reset()
 * Added support for view helpers
 * Added Atomik::_render()
 * Added Atomik::__call()
 
[Atomik_Auth]
 * New Plugin
 
[Atomik_Backend]
 * New Plugin
 
[Atomik_Config]
 * New Plugin
 
[Atomik_Db]
 * Added support for models
 * Added Atomik_Db::findValue()
 * Added Atomik_Db::has()
 * Added Atomik_Db::set()

----------- Atomik 2.1 --------------

[Atomik]

 ! Templates are renamed Views (however the template folder is still available)
 ! The file extensions for view files is now .phtml
 * Events listener priorities
 * Plugins can have their own directory
 * Auto add to the include path of the libraries folder from plugin's directory (if exists)
 * Plugins can bring their assets (css, scripts) inside an assets folder
 ! Change to Atomik::needed(): support for class names (following the PEAR convention)
 * Register Atomik::needed() as an autoload handler
 ! Changes to Atomik::url(): second argument is now an array of GET parameters
 ! @subpackage for plugins has become "Plugins" (documentation)
 ! Atomik::Start and Atomik:Dispatch::Before events have now a $cancel parameter
 ! Atomik::_renderInScope() replaced with Atomik::renderFile()
 * Atomik::fireEvent() now returns an array of each callback results
 * Added Atomik::attachClassListeners()
 ! Event Atomik::Redirect now occurs before the call to Atomik::url() (if any)
 * Routes are now natively supported
 * Added Atomik::route()
 ! Atomik::loadPlugin(): $arguments parameter dropped (use $config instead)
 ! Atomik::loadPlugin(): new parameters allow "plugins for plugins"
 ! Atomik::_mergeRecursive() is now public
 * Added Atomik::_dimensionizeArray()
 ! Atomik::set() now use Atomik::_dimensionizeArray() when the first argument is an array
 * Added Atomik::getRef()
 * Added Atomik::add()
 * Added Atomik::debug()
 * Added Atomik::asset()
 * Added Atomik::pluginAsset()
 * Added Atomik::filter()
 * Added Atomik::escape()
 ! Config file (atomik/files/config) config.php renamed bootstrap.php (atomik/files/bootstrap)
 * Added Atomik::noRender()
 * Added custom rendering engine support
 # REDIRECT_URL/URI with lighthttpd
 # slash problem on Windows in base_url
 * Layout are now natively supported
 * Added Atomik::renderLayout()
 * Added Atomik::disableLayout()
 * Session and flash messages are now natively supported
 * Added Atomik::flash()
 ! Add $httpCode parameter to Atomik::redirect()
 ! Added $writeSession parameter to Atomik::end()
 
[DbPlugin]
 
 ! Class Db replaced with Atomik_Db
 ! $where argument can now be an sql condition string
 * Added Atomik_Db::count()
 
[SessionPlugin]

 ! Merged into core

[ControllerPlugin]

 * Added config keys default_controller and default_action
 * New Atomik_Controller class (base class for controllers)
 * Define route parameters as method doc comments
 * Map request parameters to method parameters
 * New argument for ControllerPlugin::start()
 
[LayoutPlugin]

 ! Merged into core
 
